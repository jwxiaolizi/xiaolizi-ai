<?xml version="1.0" encoding="UTF-8"?>
<!-- 项目对象模型(POM)文件，定义项目构建配置 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- POM模型版本 -->
    <modelVersion>4.0.0</modelVersion>
    <!-- 继承Spring Boot父POM，提供默认配置 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.5</version>
        <relativePath/> <!-- 优先从本地仓库查找，找不到再从远程仓库下载 -->
    </parent>
    <!-- 项目坐标信息 -->
    <groupId>com.xiaolizi</groupId>  <!-- 组织/公司标识 -->
    <artifactId>xiaolizi-ai</artifactId>  <!-- 项目名称 -->
    <version>0.0.1-SNAPSHOT</version>  <!-- 开发版本号 -->
    <name>xiaolizi-ai</name>  <!-- 项目显示名称 -->
    <description>xiaolizi-ai</description>  <!-- 项目描述 -->
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <!-- 项目属性配置 -->
    <properties>
        <java.version>17</java.version>  <!-- JDK版本要求 -->
        <spring-ai.version>1.0.0-M7</spring-ai.version>  <!-- Spring AI版本 -->
    </properties>
    <!-- 项目依赖配置 -->
    <dependencies>
        <!-- Spring Boot Web Starter，提供Web MVC支持 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring AI Ollama集成，提供AI模型能力 -->
        <dependency>
            <groupId>org.springframework.ai</groupId>
            <artifactId>spring-ai-starter-model-ollama</artifactId>
        </dependency>

        <!-- MySQL JDBC驱动，运行时依赖 -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Spring Boot测试支持 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

         <!-- Lombok依赖：通过注解自动生成getter/setter/构造器等样板代码
         作用：
         1. 简化POJO类开发，使用@Data/@NoArgsConstructor等注解自动生成代码
         2. 编译时自动生成代码，无需手动编写重复方法
         注意：需在IDE中安装Lombok插件支持 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.38</version> <!-- 当前最新稳定版本 -->
        </dependency>

    </dependencies>
    <!-- 依赖管理，统一管理Spring AI相关依赖版本 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-bom</artifactId>
                <version>${spring-ai.version}</version>
                <type>pom</type>
                <scope>import</scope>  <!-- 导入Spring AI的BOM管理 -->
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 构建配置 -->
    <build>
        <plugins>
            <!-- Spring Boot Maven插件，提供打包和运行支持 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
